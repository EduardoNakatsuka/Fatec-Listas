DROP TABLE FUNCIONARIO;
DROP TABLE LOG_FUNCIONARIO;
DROP SEQUENCE SEQ_LOGFUNCIONARIO;

CREATE TABLE FUNCIONARIO(
    ID NUMBER(5) PRIMARY KEY,
    NOME VARCHAR2(120) NOT NULL,
    GENERO CHAR(1) NOT NULL,
    SALARIO NUMBER(10,2) NOT NULL,
    CONSTRAINT CK_GENERO_FUNC CHECK (GENERO IN ('M', 'F'))
);

CREATE TABLE LOG_FUNCIONARIO(
    ID_LOG NUMBER(10) PRIMARY KEY,
    ID NUMBER(5) NOT NULL,

    NOME_ANTIGO VARCHAR2(120),
    NOME_NOVO VARCHAR2(120),
    SALARIO_ANTIGO NUMBER(10,2),
    SALARIO_NOVO NUMBER(10,2),

    TIPO CHAR(1) NOT NULL,
    DATA_LOG DATE NOT NULL,
    USUARIO VARCHAR2(120) NOT NULL,
    CONSTRAINT CK_TIPO_LOGFUNC CHECK (TIPO IN ('I', 'U', 'D'))
);

CREATE SEQUENCE SEQ_LOGFUNCIONARIO
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER TRG_LOGRSALARIO
    BEFORE INSERT OR DELETE OR UPDATE OF SALARIO, NOME
    ON FUNCIONARIO
    FOR EACH ROW
    BEGIN

    IF UPDATING THEN
        INSERT INTO LOG_FUNCIONARIO (
            ID_LOG,
            ID,
            NOME_ANTIGO,
            NOME_NOVO,
            SALARIO_ANTIGO,
            SALARIO_NOVO,
            TIPO,
            DATA_LOG,
            USUARIO
        )

        VALUES(
            SEQ_LOGFUNCIONARIO.NEXTVAL,
            :OLD.ID ,:OLD.NOME,
            :NEW.NOME,:OLD.SALARIO,
            :NEW.SALARIO,
            'U',
            SYSDATE,
            USER
        );

    ELSIF INSERTING THEN
        INSERT INTO LOG_FUNCIONARIO (
            ID_LOG,
            ID,
            NOME_ANTIGO,
            NOME_NOVO,
            SALARIO_ANTIGO,
            SALARIO_NOVO,
            TIPO,
            DATA_LOG,
            USUARIO
        )

        VALUES(
            SEQ_LOGFUNCIONARIO.NEXTVAL,
            :NEW.ID ,:OLD.NOME,
            :NEW.NOME,:OLD.SALARIO,
            :NEW.SALARIO,
            'I',
            SYSDATE,
            USER
        );

    ELSIF DELETING THEN
        INSERT INTO LOG_FUNCIONARIO (
            ID_LOG,
            ID,
            NOME_ANTIGO,
            NOME_NOVO,
            SALARIO_ANTIGO,
            SALARIO_NOVO,
            TIPO,
            DATA_LOG,
            USUARIO
        )

        VALUES (
            SEQ_LOGFUNCIONARIO.NEXTVAL,
            :OLD.ID ,:OLD.NOME,
            :NEW.NOME,:OLD.SALARIO,
            :NEW.SALARIO,
            'D',
            SYSDATE,
            USER
        );
    END IF;
END;


INSERT INTO FUNCIONARIO (ID, NOME, GENERO, SALARIO)
    VALUES (1,'MARIA SOUZA', 'F', 7000);

INSERT INTO FUNCIONARIO (ID, NOME, GENERO, SALARIO)
    VALUES (2,'PAULO SILVA', 'M', 3000);

COMMIT;

UPDATE FUNCIONARIO SET SALARIO = 9000 WHERE ID = 2;
COMMIT;

UPDATE FUNCIONARIO SET NOME = 'FERNANDO SILVA', SALARIO = 11000 WHERE ID = 2;
COMMIT;

UPDATE FUNCIONARIO SET NOME = 'FERNANDOSSSS SILVA', SALARIO = 11000 WHERE ID = 2;
COMMIT;

UPDATE FUNCIONARIO SET SALARIO = 18000;

DELETE FROM FUNCIONARIO WHERE ID = 2;

SELECT * FROM LOG_FUNCIONARIO;